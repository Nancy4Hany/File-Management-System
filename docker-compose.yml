services:
  web:
    build: .
    ports:
      - "5000:5000"

    environment:
      FLASK_ENV: development
      SECRET_KEY: secretkey
      DATABASE_URL: postgresql://userr:docusecure_password@db:5432/docusecure_project
      CELERY_BROKER_URL: redis://:supersecurepassword@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:supersecurepassword@redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: flask run --host=0.0.0.0 --port=5000

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - internal_net

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: 'docusecure_project'
      POSTGRES_USER: 'userr'
      POSTGRES_PASSWORD: 'docusecure_password'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U userr -d docusecure_project"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal_net

  fastapi-app:
    build:
      context: ./fastapi_service
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
    environment:
      SECRET_KEY: secretkey
      DATABASE_URL: postgresql://userr:docusecure_password@db:5432/docusecure_project
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    command: uvicorn app:app --host 0.0.0.0 --port 8000
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/metrics || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - internal_net

  redis:
    image: redis:6-alpine
    command: ["redis-server", "--requirepass", "supersecurepassword", "--save", "", "--appendonly", "no"]
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a supersecurepassword ping | grep PONG || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - internal_net

  redis-exporter:
    image: oliver006/redis_exporter
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: "redis:6379"
      REDIS_PASSWORD: "supersecurepassword"
    networks:
      - internal_net
    depends_on:
      - redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - ELASTIC_PASSWORD=your_secure_password
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - network.host=0.0.0.0
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"' || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 10
    networks:
      - internal_net

  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter
    ports:
      - "9114:9114"
    environment:
      ES_URI: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - internal_net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.3
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: 'http://elasticsearch:9200'
      ELASTICSEARCH_USERNAME: 'elastic'
      ELASTICSEARCH_PASSWORD: 'your_secure_password'
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - internal_net

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - web
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9090/metrics | grep -q prometheus_build_info || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - internal_net

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db
    networks:
      - internal_net

  celery:
    build: .
    command: celery -A celery_worker.celery worker --loglevel=info
    user: "celery_user" 
    environment:
      CELERY_BROKER_URL: redis://:supersecurepassword@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:supersecurepassword@redis:6379/0
    depends_on:
      - web
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - internal_net


volumes:
  pg_data:
  es_data:
  redis_data:

networks:
  internal_net:
    driver: bridge